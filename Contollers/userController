const router = require ("express").Router()

const User = require('../Models/userModel')

const bcrypt = require('bcrypt');

const jwt = require('jsonwebtoken');

const encryptPassword = (password) => {
    const encrypt = bcrypt.hashSync(password, 13);
    console.log('ENCRYPT:', encrypt);
  }

// ? USER SIGNUP 
  router.post('/signup', async (req, res)=> {
console.log(req.body)
    //   encryptPassword('myPassword')
    //   encryptPassword('myPassword')
    //   encryptPassword('new_password')
      try {

        const user = new User ({
            userName: req.body.userName,
            email: req.body.email, 
            password: bcrypt.hashSync(req.body.password, 13)
    

        });
const newUser = await user.save();

const token = jwt.sign ({ id: newUser ['id']} , process.env.JWT , { expiresIn: '1 day' }) ;
console.log(token)

res.status(200).json ({
    user: newUser,
    message: 'Success! User Created!',
    token
    
})
        
    } catch (err) {
        res.status(500).json({
            ERROR: err.message
        })
        
    }

})
    //? USER LOGIN 
router.post('/login', async (req, res)=> {
    try { 
        const {email, password} = req.body;

        const  user = await User.findone({email: email});

        const passwordMatch = await bcrypt.compare(password, user.password);

        if (!user) throw new Error ('Email or Password does not match')

        if (!passwordMatch) throw new Error('Email or Password does not match');
        
        res.status( 200).json({
            user,
            message: "Succesful Login!"
        })
        
    } catch (err) {
        res.status(500).json
        Error: err.message
        
    }
})


module.exports = router;        